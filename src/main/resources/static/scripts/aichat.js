$(document).ready(function () {
    let activeChatId = null;

    // ======================== –ß–∞—Ç-—Ñ—É–Ω–∫—Ü–∏–∏ ========================
    function fetchOrCreateChat() {
        $.ajax({
            url: '/chats',
            method: 'GET',
            dataType: 'json',
            success: function (chat) {
                if (chat?.id) {
                    activeChatId = chat.id;
                    loadChatMessages(chat.id);
                } else {
                    createNewChat();
                }
            },
            error: function () {
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —á–∞—Ç–∞");
            }
        });
    }

    function createNewChat() {
        $.ajax({
            url: '/chats',
            method: 'POST',
            contentType: 'application/json',
            dataType: 'json',
            data: JSON.stringify({ chatName: "–ù–æ–≤—ã–π —á–∞—Ç" }),
            success: function (chat) {
                activeChatId = chat.id;
                loadChatMessages(chat.id);
            },
            error: function () {
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–∞—Ç–∞");
            }
        });
    }

    function loadChatMessages(chatId) {
        $('#response').empty();
        $.ajax({
            url: `/chats/${chatId}/messages`,
            method: 'GET',
            success: function (messages) {
                messages.forEach(msg => {
                    if (msg.isAiResponse) {
                        $('#response').append(createAiMessage(msg.content, true));
                    } else {
                        $('#response').append(`
                            <div class="message user-message">
                                <strong>–í—ã:</strong> ${msg.content}
                            </div>
                        `);
                    }
                });
            },
            error: function (xhr) {
                handleChatError(xhr.status);
            }
        });
    }

    // ======================== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ========================
    function createAiMessage(content, isOldMessage = false) {
        const aiMessageEl = $(`
        <div class="message ai-message">
            <strong>–ë—É–∫–µ—Ç–∏–∫:</strong>
            <div class="think-container">
                <button class="think-toggle">üìù –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è</button>
                <div class="think-content" style="display:none"></div>
            </div>
            <div class="ai-main-text"></div>
        </div>
    `);

        const mainTextEl = aiMessageEl.find('.ai-main-text');
        const thinkContent = aiMessageEl.find('.think-content');
        const thinkToggle = aiMessageEl.find('.think-toggle');

        // –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        let inThinkBlock = false;
        let remainingContent = content;
        let hasThinkContent = false;

        while (remainingContent.length > 0) {
            if (!inThinkBlock) {
                const thinkStart = remainingContent.indexOf('<think>');
                if (thinkStart >= 0) {
                    mainTextEl.append(remainingContent.substring(0, thinkStart));
                    inThinkBlock = true;
                    remainingContent = remainingContent.substring(thinkStart + 7);
                    hasThinkContent = true;
                } else {
                    mainTextEl.append(remainingContent);
                    remainingContent = '';
                }
            } else {
                const thinkEnd = remainingContent.indexOf('</think>');
                if (thinkEnd >= 0) {
                    thinkContent.append(remainingContent.substring(0, thinkEnd));
                    remainingContent = remainingContent.substring(thinkEnd + 8);
                    inThinkBlock = false;
                } else {
                    thinkContent.append(remainingContent);
                    remainingContent = '';
                }
            }
        }

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
        thinkToggle.on('click', function() {
            thinkContent.slideToggle();
            $(this).text(
                thinkContent.is(':visible')
                    ? 'üìù –°–∫—Ä—ã—Ç—å —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è'
                    : 'üìù –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è'
            );
        });

        // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –µ—Å–ª–∏ –Ω–µ—Ç —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π
        if (!hasThinkContent) {
            aiMessageEl.find('.think-container').hide();
        }

        return aiMessageEl;
    }

    // ======================== –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ========================
    $('#chatForm').on('submit', function (e) {
        e.preventDefault();
        const message = $('#userInput').val().trim();
        if (!activeChatId || !message) return;
        sendMessageToAI(activeChatId, message);
        $('#userInput').val('');
    });

    function sendMessageToAI(chatId, message) {
        $('#response').append(`
            <div class="message user-message">
                <strong>–í—ã:</strong> ${message}
            </div>
            <div class="message loading">–ë—É–∫–µ—Ç–∏–∫ –¥—É–º–∞–µ—Ç...</div>
        `);

        fetch(`/ollama?chatId=${chatId}&input=${encodeURIComponent(message)}`, {
            method: 'POST'
        })
            .then(response => processAIResponse(response))
            .catch(error => handleAIError(error));
    }

    function processAIResponse(response) {
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');

        const reader = response.body.getReader();
        const decoder = new TextDecoder();
        const aiMessage = createAiMessage('');

        $('#response .loading').remove();
        $('#response').append(aiMessage);

        let inThinkBlock = false;
        let currentBuffer = '';
        let hasThinkContent = false;

        function processChunk(text) {
            currentBuffer += text;

            while (true) {
                if (!inThinkBlock) {
                    const thinkStart = currentBuffer.indexOf('<think>');
                    if (thinkStart >= 0) {
                        aiMessage.find('.ai-main-text').append(currentBuffer.substring(0, thinkStart));
                        currentBuffer = currentBuffer.substring(thinkStart + 7);
                        inThinkBlock = true;
                        hasThinkContent = true;
                        aiMessage.find('.think-container').show();
                    } else break;
                } else {
                    const thinkEnd = currentBuffer.indexOf('</think>');
                    if (thinkEnd >= 0) {
                        aiMessage.find('.think-content').append(currentBuffer.substring(0, thinkEnd));
                        currentBuffer = currentBuffer.substring(thinkEnd + 8);
                        inThinkBlock = false;
                    } else break;
                }
            }

            if (!inThinkBlock && currentBuffer.length > 0) {
                aiMessage.find('.ai-main-text').append(currentBuffer);
                currentBuffer = '';
            }
        }

        function read() {
            reader.read().then(({ done, value }) => {
                if (done) {
                    if (currentBuffer.length > 0) processChunk('');
                    return;
                }
                processChunk(decoder.decode(value));
                read();
            });
        }

        read();
    }

    // ======================== –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ========================
    function handleAIError(error) {
        console.error('AI Error:', error);
        $('#response .loading').remove();
        $('#response').append(`
            <div class="message error">
                <strong>–û—à–∏–±–∫–∞:</strong> ${error.message}
            </div>
        `);
    }

    // –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
    $('#clearChatBtn').on('click', function () {
        if (!activeChatId) return;
        if (confirm("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π?")) {
            $.ajax({
                url: `/chats/${activeChatId}/messages`,
                method: 'DELETE',
                success: function () {
                    $('#response').empty();
                    alert('–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—á–∏—â–µ–Ω–∞');
                },
                error: function (xhr) {
                    alert('–û—à–∏–±–∫–∞: ' + xhr.responseJSON?.error);
                }
            });
        }
    });

    function handleChatError(status) {
        const errors = {
            404: '–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
            403: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
            500: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        };
        alert(errors[status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    }

    // ======================== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ========================
    fetchOrCreateChat();
});